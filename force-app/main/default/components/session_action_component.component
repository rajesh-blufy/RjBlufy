<apex:component controller="SessionActionController">     
     <apex:attribute name="customMetaDataConfig" type="Full_Calendar_Configuration__mdt" description="for custom data Configration" />
    <style>
        
        .custom-anchor{
        text-decoration:none !important;
        }
        .slds-scope .slds-tabs_default__item.slds-is-active:after{
            background-color: rgb(89, 81, 208);
        }
        .slds-modal__header{
        background: {!customMetaDataConfig.Modal_Header_Footer_Color__c}  !important;
        color: #ffffff;
        }        
        .custom-btn{
        background: #4bca81 !important;
        color: #fff !important;
        border-color: #4bca81 !important;
        }       
        .font-label-weight{
        	font-weight: 600;
        }
        .custm-modal-footer-btn{
        box-shadow: 3px 2px 2px #c1c1c1;
        border-radius: 7px;
        height: 37px;
        }
        .custom-anchor{
        	color: #2f5597 !important
        }
        .custom-pointer{
        	cursor: pointer;
        }
        .custom-border{
        border:0px !important;
        border-top: 1px solid #dddbda !important;        
        border-radius: 0px !important;
        }
        .custom-slds-text-heading{
        font-weight: 400 !important;
        font-size: 1.01rem !important; 
        line-height: 1.7 !important;
        }
        .custom-slds-p{
        font-size: 1.09em !important;
        }
        .custom-mini-modal-button{
        box-shadow: 3px 2px 4px #dddbda;
        }
    </style>
    <script>    
    var selectedStudentsId = '';
    var selectedSessionId = '';
    var selectedStudentClassId = '';  
    var selectedAccountId = '';
    var oldCalendarInfoForStudent;
    function handleChangeTab(event){          
            console.log(event);
            let evt = event;
            let tabs = document.querySelectorAll('.slds-tabset');
            tabs.forEach(e => {
                e.classList.remove('slds-is-active');
            });
            evt.classList.add('slds-is-active');
            document.querySelectorAll('.slds-tabs_default__content').forEach(ele => {
            	ele.classList.add('slds-hide');
                ele.classList.remove('slds-show');
            });
            let tabClass = '';
            if (evt.dataset.index == 'tab-1')
                tabClass = 'tab-content-1';
            else if (evt.dataset.index == 'tab-2')
                tabClass = 'tab-content-2';
            else if (evt.dataset.index == 'tab-3')
                tabClass = 'tab-content-3';               
            
            document.querySelector('.' + tabClass).classList.add('slds-show');
            document.querySelector('.' + tabClass).classList.remove('slds-hide');
                    // console.log('class', this.template.querySelector('.slds_tab-1'));*/
        }
    function makeTabActive(){
                let tabs = document.querySelectorAll('.slds-tabset');
                tabs.forEach(function(e,indx) {
                	e.classList.remove('slds-is-active');
                	if(indx == 0){
            			e.classList.add('slds-is-active');
            		}                
            	});    
                
                document.querySelectorAll('.slds-tabs_default__content').forEach(ele => {
            		ele.classList.add('slds-hide');
                	ele.classList.remove('slds-show');
            	});
                document.querySelector('.tab-content-1').classList.add('slds-show');
                document.querySelector('.tab-content-1').classList.remove('slds-hide');
     }
                
    function getSessionDeatilFromSF(sessionId){       
            selectedSessionId = sessionId;
           	document.getElementById("spinner").style.display = "block";
       		Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.SessionActionController.fetchSessionsDetail}',
                selectedSessionId,
                function(result, event){
                	document.getElementById("spinner").style.display = "none";
                	console.log(event.status);
                	console.log('Event --> ',result); 
                	let contentDiv = '';
                	if(result != null){
                        for(idx of result){
                        contentDiv += '<div class="slds-grid slds-wrap"><div class="slds-col slds-size_6-of-12 slds-p-around_xx-small"> <label  class="slds-text-heading_small font-label-weight">Location : </label><span class="slds-text-heading_small custom-text-color">';
                        contentDiv += idx.Teacher__r.Location__r.Name;
                        contentDiv += '</span></div><div class="slds-col slds-size_6-of-12 slds-p-around_xx-small"><label class="slds-text-heading_small font-label-weight">Teacher : </label><span class="slds-text-heading_small custom-text-color">';
                        contentDiv +=  idx.Teacher__r.Name;
                        contentDiv += '</span></div> <div class="slds-col slds-size_6-of-12 slds-p-around_xx-small"><label class="slds-text-heading_small font-label-weight">Date : </label><span class="slds-text-heading_small custom-text-color">';
                        contentDiv += getLongDate(new Date(idx.Session_Date__c));
                        contentDiv += '</span> </div><div class="slds-col slds-size_6-of-12 slds-p-around_xx-small">   <label class="slds-text-heading_small font-label-weight">Time : </label>  <span class="slds-text-heading_small custom-text-color">';
                        contentDiv += timeConvert(msToTime(idx.Start_Time__c, true));
                        contentDiv += '</span> </div> <div class="slds-col slds-size_6-of-12 slds-p-around_xx-small"><label class="slds-text-heading_small font-label-weight">Duration : </label> <span class="slds-text-heading_small custom-text-color">';
                        contentDiv += idx.Duration__c;
                        contentDiv += '</span> </div> <div class="slds-col slds-size_6-of-12 slds-p-around_xx-small"> <label class="slds-text-heading_small font-label-weight">Class : </label><span class="slds-text-heading_small custom-text-color">';
                        contentDiv += idx.Class__r.Name;
                        contentDiv += '</span> </div></div></div>';
                    }
                		if(document.querySelector('.content-session-detail') !=  null){
                			document.querySelector('.content-session-detail').remove();
                		}
                        let tabContent = document.querySelector('.tab-content-1');
                        let newSessionElement = document.createElement('div');
                		newSessionElement.className = 'content-session-detail';
                        newSessionElement.innerHTML = contentDiv;
                        tabContent.prepend(newSessionElement);
                	}else{
                        let tabContent = document.querySelector('.tab-content-1');
                        let newSessionElement = document.createElement('div');
                		newSessionElement.innerHTML = '<div>Something went wrong</div>';
                        tabContent.prepend(newSessionElement);

            		}     
                getStudentSessionFromSF();
                makeTabActive();
            	}, 
                {escape: true}
           ); 
        }
    
    function getStudentSessionFromSF(){      
        document.getElementById("spinner").style.display = "block";
    	Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.SessionActionController.getSessionStudent}',
                selectedSessionId,
                function(result, event){                	
                	console.log(event.status);
                	console.log('getSessionStudent --> ',result); 
                    document.getElementById("spinner").style.display = "none";
                    if(document.querySelector('.content-student-detail') !=  null){
                        document.querySelector('.content-student-detail').remove();
                    }
                    let table = '<table class="slds-table slds-table_cell-buffer slds-no-row-hover slds-table_bordered"> <thead> <tr> <th>';
                    table += '<div class="slds-form-element__control">';
                    table += '<div class="slds-checkbox">';
                    table += '<input type="checkbox" name="options" class="all-select-checkbox" id="select-all-checkbox" onchange="checkAllTheBoxes(this);" />';
                    table += '<label class="slds-checkbox__label" for="select-all-checkbox">';
                    table += '<span class="slds-checkbox_faux"></span>';
                    table += '<span class="slds-form-element__label"> </span> </label> </div> </div> </div> </th>';
                    table += '<th>Name</th> <th>Status</th> <th>Teacher</th> <th>Class</th> <th>Action</th> </tr> </thead> <tbody>';
                    if(result != null){
                        for(idx of result){
                            table += '<tr> <td>';
                            table += '<div class="slds-form-element__control"><div class="slds-checkbox"><input type="checkbox" class="tbody-checkboxes" name="options" id='+idx.Id+' onchange="getCheckBoxState(this);" /> <label class="slds-checkbox__label" for="'+idx.Id+'"><span class="slds-checkbox_faux"></span><span class="slds-form-element__label"> </span> </label></div></div>';
                            table += '</td> <td>';
                            table += idx.Account__r.Name;
                            table += '</td> <td>';
                            table += idx.Status__c;
                            table += '</td> <td>';
                            table += idx.Session__r.Teacher__r.Name;
                            table += '</td> <td>';
                            table += idx.Session__r.Class__r.Name;
                            table += '</td> <td>';
                            table += '<a href="#" class="custom-anchor" onclick="toggleConfirmationModal(this);" data-id="'+idx.Id+'" >Cancel</a>/<a href="#" class="custom-anchor"  name="reschedule-student" onclick="activeRescheduleMode(this);" data-id="'+idx.Id+'" data-classid="'+idx.Session__r.Class__c+'" data-accid="'+idx.Account__c+'" >Reschedule</a>';
                            table += '</td> </tr>';
                        }
                          table += '</tbody> </table>';                       
                        let tabContent = document.querySelector('.tab-content-2');
                        let newSessionElement = document.createElement('div');
                        newSessionElement.className = 'content-student-detail';
                        newSessionElement.innerHTML = table;
                        tabContent.append(newSessionElement);                       
                    }else{
                        let tabContent = document.querySelector('.tab-content-2');
                        let newSessionElement = document.createElement('div');
                        newSessionElement.className = 'content-student-detail';
                        newSessionElement.innerHTML = '<div>There are zero number of students for this session event</div>';
                        tabContent.append(newSessionElement);
                    }
                    getSessionHistoryRecordsFromSF();
            	}, 
                {escape: true}
           ); 
    }
    
    function getSessionHistoryRecordsFromSF(){
    	document.getElementById("spinner").style.display = "block";
    	Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.SessionActionController.getSessionHistoryRecords}',
                selectedSessionId,
                function(result, event){                	
                	console.log(event.status);
                	console.log('History Records --> ',result); 
                    document.getElementById("spinner").style.display = "none";
                    if(event.status){
                        let contentDiv = '';
                        contentDiv += '<div>';
                        contentDiv += '<ul class="slds-has-dividers_around-space">';
                        result.forEach(ele => {
                            contentDiv += '<li class="slds-item custom-border">';
                        	contentDiv += '<article class="slds-tile slds-tile_board">   ';                                   
                            contentDiv += '<div class="slds-tile__detail">';
                            contentDiv += '<p class="slds-text-heading_medium custom-slds-text-heading">' + ele.createdDate +' - by '+ ele.historyBy;                                        
                            contentDiv += '<br />';
                            contentDiv += '<p class="slds-truncate custom-slds-p">'+ele.description+'</p>';
                            contentDiv += '</div>';
                            contentDiv += '</article>';                           
                            contentDiv += '</li>'; 	
						});                                               
                        contentDiv += '</ul>';
                        contentDiv += '</div>';
                       	let tabContent = document.querySelector('.tab-content-3');
                       	let newSessionElement = document.createElement('div');
                      	newSessionElement.className = 'content-history-detail';
                        newSessionElement.innerHTML = contentDiv;
                        tabContent.append(newSessionElement); 
                    }
                    
            	}, 
                {escape: true}
           ); 
    }
    
    function updateStudentStatusFromSF(event){
        selectedStudentsId = selectedStudentsId.replace(/,\s*$/, "");       
        console.log(event);
        let status = event.name;
        if(selectedStudentsId != ''){
            document.getElementById("spinner").style.display = "block";
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.SessionActionController.changeStudentStatus}',
                selectedStudentsId,status,
                function(result, event){   
                    document.getElementById("spinner").style.display = "none";
                    console.log(event.status);
                    console.log('result--> ',result);
                    if (event.status) {
                        selectedStudentsId = '';
                        getStudentSessionFromSF();
                    }
                    
                },
                {escape: true}
            );
        }else{
            document.querySelector('.student-toast').classList.remove('slds-hide');
                setTimeout(ele =>{
                    document.querySelector('.student-toast').classList.add('slds-hide');
                },1000);               
            }
    }
    
    function checkAllTheBoxes(event){   
        selectedStudentsId = '';
    	document.querySelectorAll('.tbody-checkboxes').forEach(ele => {
            event.checked == true ? ele.checked = true : ele.checked = false;
            if(ele.checked == true){
        		selectedStudentsId += ele.id +',';
        	}
        });
    console.log(selectedStudentsId);
    }
    
    function getCheckBoxState(event){
        if(event.checked == true){
            selectedStudentsId += event.id +',';
        }else if(event.checked == false){           
        	selectedStudentsId = selectedStudentsId.replace(event.id+',','');
            if(selectedStudentsId.includes(event.id)){
            	selectedStudentsId = selectedStudentsId.replace(event.id,'');
            }
            document.querySelector(".all-select-checkbox").checked = false;
        }
        console.log(selectedStudentsId);
    }
    
    function cancelStudentSession(event){
        console.log(event);        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.SessionActionController.cancelStudentForSession}',
            selectedStudentsId,
            function(result, event){   
                document.getElementById("spinner").style.display = "none";
                console.log(event.status);
                console.log('result--> ',result);
                if (event.status) {
                    selectedStudentsId = '';
                    getStudentSessionFromSF();
                }
                
            },
            {escape: true}
        );
    }
	
	function cancelSession(){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.SessionActionController.cancelSession}',
            selectedSessionId,
            function(result, event){   
                document.getElementById("spinner").style.display = "none";
                console.log(event.status);
                console.log('result--> ',result);
                if (event.status) {
                    closeSessionDetailModal();
                    handleChangeCalendarDay();
                }
                
            },
            {escape: true}
        );
    }
    
    function handleActionOfConfirmationModal(event){
        //alert(selectedStudentsId);
        if(event.name == 'Confirm'){
            if(selectedStudentsId){
            	cancelStudentSession();
            }else if(selectedSessionId){
                cancelSession();
            }
        }else{
        	selectedStudentsId = '';
        }
       toggleConfirmationModal();           
    }
    
    function toggleConfirmationModal(event){
        if(event){
        	selectedStudentsId = event.dataset.id;
            document.querySelector('.modal-msg').textContent = 'Are you sure about to cancel the student for this session';
        }else{
        	document.querySelector('.modal-msg').textContent = 'Are you sure about to cancel this session ';
        }
        document.querySelector('.student-confirmation-model').classList.toggle('slds-hide');
        
    }   
        
    function activeRescheduleMode(event){
        isCalendarInRescheduleMode = true;
        rescheduleModeName = event.name;  
        if(event.dataset){
            selectedStudentsId = event.dataset.id;
            selectedStudentClassId = event.dataset.classid;
            selectedAccountId = event.dataset.accid;
            oldCalendarInfoForStudent = calendarInfo;
           console.log('activeRescheduleMode ' ,calendarInfo);
        }
        document.querySelector('.slds-alert-date-time').classList.remove('slds-hide');
        closeSessionDetailModal();
    }          
    </script>   
    <section role="dialog" tabindex="-1" class="slds-modal slds-fade-in-open slds-modal_medium" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <div class="slds-toast student-toast slds-hide" >
            <div class="slds-notify_container">
                <div class="slds-notify slds-notify_toast slds-theme_warning" role="status">
                    <span class="slds-assistive-text">warning</span>              
                    <div class="slds-notify__content">
                        <h2 class="slds-text-heading_small ">Please select the student.</h2>
                    </div>               
                </div>
            </div>
        </div>
        <div class="slds-modal__container">
            <header class="slds-modal__header">              
                <h2 id="modal-heading-01" class="slds-modal__title slds-hyphenate">Session Detail
                    <svg class="slds-button__icon slds-float_right custom-pointer" aria-hidden="true" onclick="closeSessionDetailModal(); return false;">
                        <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                    </svg>
                </h2>                                                  
            </header>
            <div class="slds-modal__content slds-p-around_medium">
                
                <div class="slds-tabs_default">
                    <ul class="slds-tabs_default__nav" role="tablist">
                        <li class="slds-tabs_default__item slds-tabset slds-is-active" title="Session Detail" data-index="tab-1" role="presentation" onclick="handleChangeTab(this);">
                            <a class="slds-tabs_default__link custom-anchor" href="javascript:void(0);" role="tab" tabindex="0" aria-selected="true" aria-controls="tab-default-1" id="tab-default-1__item">Session Detail</a>
                        </li>
                        <li class="slds-tabs_default__item slds-tabset" title="Item Two"  data-index="tab-2" role="presentation" onclick="handleChangeTab(this);">
                            <a class="slds-tabs_default__link custom-anchor" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="tab-default-2" id="tab-default-2__item">Students Detail</a>
                        </li>
                        <li class="slds-tabs_default__item slds-tabset" title="Item Three"  data-index="tab-3" role="presentation" onclick="handleChangeTab(this);">
                            <a class="slds-tabs_default__link custom-anchor" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="tab-default-3" id="tab-default-3__item">History</a>
                        </li>
                    </ul>
                    <div class="slds-tabs_default__content slds-show tab-content-1" role="tabpanel" aria-labelledby="tab-default-1__item">
                        <hr />
                        <div>
                            <!--<div class="slds-button-group custm-modal-footer-btn" role="group">
                                    <button class="slds-button slds-button_neutral">No-show &nbsp;
                                        <svg class="slds-button__icon" aria-hidden="true">
                                        	<use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                        </svg>
                                    </button>
                                    <button class="slds-button slds-button_neutral">Completed &nbsp;
                                    	<svg class="slds-button__icon" aria-hidden="true">
                                    		<use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#check')}"></use>
                                    	</svg>
                                    </button>                                      
                                </div> -->                            
                            
                            <div class="slds-button-group custm-modal-footer-btn" role="group">
                                <button class="slds-button slds-button_neutral" onclick="toggleConfirmationModal();" >Cancel &nbsp;
                                    <svg class="slds-button__icon" aria-hidden="true">
                                        <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#clear')}"></use>
                                    </svg>
                                </button>
                                <button class="slds-button slds-button_neutral" name="reschedule-sessions" onclick="activeRescheduleMode(this);">Reschedule &nbsp;
                                    <svg class="slds-button__icon" aria-hidden="true">
                                        <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#edit')}"></use>
                                    </svg>
                                </button>                                      
                            </div> 
                            
                            <div class="slds-button-group custm-modal-footer-btn" role="group">
                                <button class="slds-button slds-button_neutral ">Add Make-up &nbsp;
                                    <svg class="slds-button__icon" aria-hidden="true">
                                        <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#new')}"></use>
                                    </svg>
                                </button>
                            </div>
                        </div>           
                    </div>
                    <div class="slds-tabs_default__content slds-hide tab-content-2" role="tabpanel" aria-labelledby="tab-default-2__item">
                        <div class="slds-button-group custm-modal-footer-btn slds-float_right slds-m-bottom_x-small" role="group">
                            <button class="slds-button slds-button_neutral" onclick="updateStudentStatusFromSF(this);" name="No-show" >No-show &nbsp;
                                <svg class="slds-button__icon" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                </svg>
                            </button>
                            <button class="slds-button slds-button_neutral" onclick="updateStudentStatusFromSF(this);" name="Completed" >Completed &nbsp;
                                <svg class="slds-button__icon" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#check')}"></use>
                                </svg>
                            </button>                                      
                        </div>
                    </div>
                    <div class="slds-tabs_default__content slds-hide tab-content-3" role="tabpanel" aria-labelledby="tab-default-3__item">                                              
                   
                    </div>
                </div>              
            </div>                  
        </div>
    </section>
    <div class="slds-backdrop slds-backdrop_open"></div>
    
    <!--Confirmation model -->
    <div class="student-confirmation-model slds-hide">               
        <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
            <div class="slds-modal__container">                               
                <!--Modal Box Content Start-->
                <div class="slds-modal__content" style="box-shadow: 0px 0px 1em 42em rgba(90, 87, 86, 0.45);}">
                    <header class="slds-modal__header">
                        <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close">                            
                        </button>
                        <h2 id="modal-heading-01" class="slds-modal__title slds-hyphenate">Confirmation</h2>                      
                    </header>
                    <center class=" slds-p-around--medium"><b class="modal-msg"></b></center>
                    <footer class="slds-modal__footer">
                        <button class="slds-button slds-button_neutral custom-mini-modal-button" name="Cancel" onclick="handleActionOfConfirmationModal(this);return false;">Cancel</button>
                        <button class="slds-button slds-button_brand  custom-mini-modal-button" name="Confirm" onclick="handleActionOfConfirmationModal(this);return false;">Confirm</button>
                    </footer>
                </div>               
            </div>
        </section>
        <div class="slds-backdrop slds-backdrop_open"></div>
    </div>
    <!--<c:session_student_makeup sessionName="SES-0041" ></c:session_student_makeup>-->
</apex:component>